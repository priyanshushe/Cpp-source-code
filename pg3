#include<stdio.h> #include<time.h> #include<stdlib.h> #define infinity 999 int min(int a,int b)
{
return a<b?a:b;
}
void floyd1(int p[10][10],int n)
{
int I,j,k;

for(k=1;k<=n;k++)
{
for(i=1;i<=n;i++)
{
for(j=1;j<=n;j++)
{
p[i][j]=min(p[i][j].p[i][k]+p[k][j]);
}
}
}
}
void main()
{
int a[4][4]={{0,999,3,999},{2,0,999,999},{999,7,0,1},{6,999,999,0}}
int i,j,n;
clock_t start,finish; int counter;
float sec;
printf(“\nEnter the no. of nodes:”); scanf(“%d”,&n);
printf(“\nEnter the cost matrix 0 – for self-loop and 999 – for no edges\n”);

for(i=1;i<=n;i++) for(j=1;j<=n;j++) scanf(“%d”,&a[i][j]); start=clock(); counter=0;
while(clock()-start<100)
{
counter++; floyd1(a,n);
}
finish=clock();
sec=((finish – start)/18.26)/counter; printf(“Time taken: %f”,sec); printf(“\nThe resultant path matrix is\n”);
