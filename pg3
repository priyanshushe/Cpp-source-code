#include<stdio.h>
#include<conio.h>
#include<time.h>
int d[20],s[20],w[20][20],p[20],n,v;
int findmin()
{
      int i,min;
      for(i=1;i<=n;i++)
	 if(s[i]==0)
	{
 min=i;
		break;
	}
for(i=1;i<=n;i++)
{
	   if(d[i]<d[min] && s[i]==0)
	   min=i;
}
       return min;
}
void dijikstra()
{
      int i,w1,u,k,j;
      for(i=1;i<=n;i++)
{
	s[i]=0;
	d[i]=999;
	p[i]=0;
 }
      d[v]=0;
      for(k=1;k<=n;k++)
{ 
u=findmin();
	 s[u]=1;
	   for(w1=1;w1<=n;w1++)
	{
		 if(w[u][w1]!=999 && s[w1]==0)
	 {
		  if(d[w1]>d[u]+w[u][w1])
		  {
		       d[w1]=d[u]+w[u][w1];
		       p[w1]=u;
		   }
	}
	   }
	}
	printf("shortest path costs\n");
	for(i=1;i<=n;i++)
	{
		 if(d[i]==999)
		      printf("sorry!  no path for source %d to %d vertex",v,i);
		  else
		      printf("path cost from %d to %d is %d\n",v,i,d[i]);
	 }
	 printf("shortest group of paths are\n");
	 for(i=1;i<=n;i++)
	 {
	     if(i!=v && d[i]!=999)
	     {
		  printf("%d",i);
		  j=p[i];
		  while(p[j]!=0)
		  {
		  printf("-->%d",j);
		  j=p[j];
		  }
		  printf("-->%d\n",v);
	  }
	 }
 }
   void main()
   {
     int i,j;
     clock_t end,st;
     clrscr();
     printf("enter the number of vertices\n");
     scanf("%d",&n);
     printf("enter the cost of vertices\n");
      	for(i=1;i<=n;i++)
     		for(j=1;j<=n;j++)
     			scanf("%d",&w[i][j]);
     printf("enter the source vertex\n");
     scanf("%d",&v);
     st=clock();
     dijkstra( );
    end=clock();
     printf("time taken is %d\n",(end-st)/CLK_TCK);
     getch();
  } 
